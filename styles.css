/* Global styles*/

@import url('https://fonts.googleapis.com/css2?family=Frank+Ruhl+Libre:wght@300;400;500;700;900&family=Great+Vibes&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Vibes&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.main-head {
    box-shadow: 0px 10px 10px rgba(0,0,0,0.1);
    z-index: 2;
    position: relative;
    /* whenever you have a box shadow and the image overtakes it, make sure to use a larger z-index with position relative */
}

html {
    font-size: 62.5%;
    /* below is how we can introduce variables into css and implement them anywhere is the css files */
    --header1: calc(2rem + 1vw);
    /* the larger the screen gets, the larger the font gets as well for above styling */
    --header2: calc(3.5rem + 1vw);
    --header3: calc(3rem + 1vw);
    --header4: calc(2.4rem + 1vw);
    --text: calc(1.5rem + 1vw);
    --big: calc(6rem + 1vw);
    --special-color: #906272;
    --background-color: #414141;
    --grey-text: #525252;
}

h1 {
    font-size: var(--header1);
}

li,button,label,input,p,a {
    font-size: var(--text);
}

h2 {
    font-size: var(--header2);
}

h3 {
    font-size: var(--header3);
}

h4,h5 {
    font-size: var(--header4);
}

ul {
    list-style: none;
}

a {
    text-decoration: none;
    color: black;
}

.flex {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

body {
    font-family: 'Frank Ruhl Libre', sans-serif;
    animation: opening 1s ease-in-out;
}

h1 {
    font-family: 'Great Vibes', sans-serif;
}

/* Nav section */

nav {
    width: 90%;
    margin: auto;
    display: flex;
    align-items: center;
    min-height: 10vh;
    padding: 2rem 0rem;
}

#logo {
    flex: 1 1 20rem;
}

.nav-links {
    display: flex;
    justify-content: space-around;
    flex: 1 1 20rem;
}

.hero {
    min-height: 90vh;
    width: 95%;
    margin: 0 0 0 5%;
    /* above only adds 5% margin to right side */
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;
    /* overflow was used to get the image to not go off the screen and take up more space */
}

.hero-intro {
    flex: 1 1 40rem;
    text-align: center;
}

.hero-intro p {
    padding: 5rem 10rem;
}

.hero-intro h2 {
    padding-top: 3rem;
}

.hero-intro a {
    padding: 2rem 8rem;
    border: 3px solid black;
    margin-bottom: 4rem;
}

.hero-image {
    flex: 1 1 40rem;
    background: linear-gradient(#dad8dd, #dad1d4);
    position: relative;
    z-index: 1;
}

.hero-elena {
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* we are trying to get the image to fit in its space so by using these styles we are able to accomplish that */

}

.plant {
    position: absolute;
    bottom: 0;
    left: -10%;
    z-index: -1;
    transform: translateY(10%) rotateZ(-10deg) rotateX(-90deg);
    /* putting the transform helps the plant be hidden first when the site is entered */
    animation: plant-entrance 1.5s ease-in-out 0.5s forwards,
    plant-shake 2.5s infinite ease alternate-reverse 2s;
    /* we are chaining animations together, so we can get the infinite shake of the plant */
    transform-origin: bottom;
    /* transform-origin helps so that the plant animation starts from the bottom and not the middle */
    max-height: 80%;
}

.plant2 {
    left: 50%;
}

/* Animations */

/* keyframes are used for animations */

/* when using keyframes, dont forget to input the animation style under the object you are trying to animate */

@keyframes opening {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes plant-entrance {
    from {
        transform: translateY(10%) rotateZ(-10deg) rotateX(-90deg);
    }
    to {
        transform: translateY(0%) rotateZ(0deg) rotateX(0deg);
    }
}

@keyframes plant-shake {
    from {
        transform: rotateZ(-5deg);
    }
    to {
        transform: rotateZ(0deg);
    }
}

/* adding the bottom so we dont see the checkbox when not in mobile view. then in media query add display block */
.burger, .menu-check {
    display: none;
}

/* About section */

.about {
    min-height: 100vh;
    display: flex;
    flex-wrap: wrap;
}

.about-text{
    flex: 2 1 40rem;
    justify-content: space-around;
    background: var(--background-color);
    color: white;
}

.about-text div {
    padding: 3rem 10rem;
}

.about-text h3{
    padding: 2rem 0rem;
    font-family: 'Ruhl Medium';
}

.about-text h2{
    font-family: 'Vibes';
    padding: 4rem;
}

.about-image {
    flex: 1 1 40rem;
    position: relative;
}

.about-image h5 {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translate(-50%, 20%);
    letter-spacing: 2rem;
}

.about-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}


/* Gallery section */

.gallery {
    display: grid;
    min-height: 100vh;
    grid-template-columns: repeat(3,1fr);
    position: relative;
}

.gallery img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.gallery1 {
    grid-column: 1/3;
}

.gallery2 {
    grid-column: 3/4;
    grid-row: 1/3;
}

.gallery-head {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* the transform makes the content dead center*/
    color: white;
    background: var(--background-color);
    padding: 5rem 10rem;
    text-align: center;
}


/* Contact section */

.contact {
    min-height: 90vh;
    display: flex;
    /* flex-direction: column; */
    flex-wrap: wrap;
}

.form-wrapper {
    flex: 3 1 40rem;
    justify-content: center;
    align-items: center;
}

.form-wrapper label {
    display: block;
}

.form-wrapper input {
    display: block;
    margin: 3rem 0rem;
    background: var(--background-color);
    color: white;
    border: none;
    padding: 1rem;
}

.form-wrapper h2 {
    margin-bottom: 5rem;
}

.form-wrapper button {
    padding: 1rem 8rem;
    background: var(--special-color);
    color: white;
    border: none;
    width: 100%;
}

.form-wrapper span {
    font-size: var(--big);
    color: var(--special-color);
}

.contact img {
    flex: 1 1 40rem;
}

footer {
    background: var(--background-color);
    color: white;
    display: flex;
    padding: 3rem 5%;
    align-items: center;
    flex-wrap: wrap;
}

footer ul {
    display: flex;
    flex: 1 1 40rem;
    justify-content: space-around;
    align-items: center;
}

footer h4 {
    flex: 1 1 40rem;
    font-size: calc(1.6rem + 1vw);
}

@media screen and (max-width:842px) {
    .hero {
        width: 100%;
        margin: 0;
    }

    .hero-intro p {
        padding: 5rem 3rem;
    }

    /* Burger stuff below */

    .burger {
        position: relative;
        display: block;
    }

    .burger span {
        padding: 0.2rem 2rem;
        background: var(--grey-text);
        margin: 0.5rem 0rem;
        display: block;
    }

    .nav-links a {
        color: white;
        font-size: var(--header3);
        text-decoration: underline;

    }

    .nav-links {
        background: var(--background-color);
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 100%;
        flex-direction: column;
        align-items: center;
        transition: transform 1s ease;    
    }

    /* the .menu-check is used for a checkbox for the burger icon since this is purely htmml and css */
    .menu-check {
        display: block;
        position: absolute;
        top: 50%;
        right: 5%;
        transform: translate(5%, -50%);
        width: 5rem;
        height: 5rem;
        cursor: pointer;
        opacity: 0;
        z-index: 100;
    }

    /* below checks if the checkbox is checked or not and then it creates a transform style on .nav-links */
    .menu-check:checked + .nav-links {
        transform: translate(-100%);
    }

    .menu-check:checked  ~ .burger span {
        background: white;
    }

    /* About section */

    .about-text div {
        padding: 3rem 3rem;
    }

    /* Gallery */

    .gallery img {
        grid-row: auto;
        grid-column: auto;
    }

    .gallery {
        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
    }

    .gallery-head {
        display: none;
    }

    /* contact section */
    .contact img {
        display: none;
    }

    footer ul {
        order: 1;
    }

    footer h4 {
        order: 2;
        padding: 1rem;
    }
}